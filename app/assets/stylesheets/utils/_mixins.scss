/*generators and helpers*/

@mixin margins-paddings($value, $prefix : false) {
  @if $prefix {
    .#{$prefix}-m-t-#{$value} { margin-top: rem-calc($value); }
    .#{$prefix}-m-b-#{$value} { margin-bottom: rem-calc($value); }
    .#{$prefix}-p-t-#{$value} { padding-top: rem-calc($value); }
    .#{$prefix}-p-b-#{$value} { padding-bottom: rem-calc($value); }
    .#{$prefix}-p-l-#{$value} { padding-left: rem-calc($value); }
    .#{$prefix}-p-r-#{$value} { padding-right: rem-calc($value); }
  }
  @else {
    .m-t-#{$value} { margin-top: rem-calc($value); }
    .m-b-#{$value} { margin-bottom: rem-calc($value); }
    .p-t-#{$value} { padding-top: rem-calc($value); }
    .p-l-#{$value} { padding-left: rem-calc($value); }
    .p-r-#{$value} { padding-right: rem-calc($value); }
    .p-b-#{$value} { padding-bottom: rem-calc($value); }
  }
}

@mixin margins-paddings-list {
  $max-value: 8;

  @for $i from 1 through $max-value {
    @include margins-paddings($i*10);
  }

  $sizes: small medium large;
  $modes: up only;

  @each $size in $sizes {
    @each $mode in $modes {
      @if $size == small {
        @if $mode == up {
          @for $i from 1 through $max-value {
            @media #{$small-up} {
              @include margins-paddings($i*10, #{$size}-#{$mode});
            }
          }
        }
        @if $mode == only {
          @for $i from 1 through $max-value {
            @media #{$small-only} {
              @include margins-paddings($i*10, #{$size}-#{$mode});
            }
          }
        }
      }

      @if $size == medium {
        @if $mode == up {
          @for $i from 1 through $max-value {
            @media #{$medium-up} {
              @include margins-paddings($i*10, #{$size}-#{$mode});
            }
          }
        }
        @if $mode == only {
          @for $i from 1 through $max-value {
            @media #{$medium-only} {
              @include margins-paddings($i*10, #{$size}-#{$mode});
            }
          }
        }
      }

      @if $size == large {
        @if $mode == up {
          @for $i from 1 through $max-value {
            @media #{$large-up} {
              @include margins-paddings($i*10, #{$size}-#{$mode});
            }
          }
        }
        @if $mode == only {
          @for $i from 1 through $max-value {
            @media #{$large-only} {
              @include margins-paddings($i*10, #{$size}-#{$mode});
            }
          }
        }
      }
    }
  }
}


@mixin item_w_rating {
  text-align: center;

  .poster {
    position: relative;
    overflow: hidden;
    box-shadow: rem-calc(0 0 0) rgba(#000, .6);
    transition: box-shadow 0.35s ease;
    transform: translateZ(0);

    &:after {
      position: absolute;
      display: block;
      top: 0;
      left: 0;
      right: 0;
      bottom: -1px;
      content: "";
      box-shadow: inset 0 rem-calc(-40) rem-calc(100) rem-calc(20) rgba($black, .8);
      transition: box-shadow 0.35s ease, opacity 0.35s ease;
      transform: translateZ(0);
      z-index: 1;
    }

    img {
      opacity: 0.3;
      transition: opacity 0.5s ease;
    }

    a {
      position: absolute;
      top:0; left:0; right:0; bottom:0;
      display: block;
      z-index: 5;
    }

    .poster-image {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-repeat: no-repeat;
      background-position: center;
    }

    .titles {
      position: absolute;
      width: 100%;
      left: 0;
      top: 50%;
      transform: translate3d(0,-50%,0);
      text-align: center;
      z-index: 4;
      transition: opacity 0.35s ease 0.1s, filter 0.35s ease 0s, -webkit-filter 0.35s ease 0s;
      h1 {
        display: inline-block;
        font-size: rem-calc(18);
        padding-bottom: rem-calc(10);
        border-bottom: 2px solid rgba(#fff, .4);
      }
    }
    &:hover {
      box-shadow: rem-calc(0 0 80) rgba(#000, .6);
      &:after {
        box-shadow: inset 0 rem-calc(-40) rem-calc(50) 0 rgba($black, .8);
        opacity: 0;
      }
      img {
        opacity: 1;
      }
      .titles {
        filter:progid:DXImageTransform.Microsoft.Blur(PixelRadius='10');
        -webkit-filter: blur(10px);
        filter: blur(10px);
        opacity: 0;
      }
    }
  }

  .awwards-list {
    transform: scale(0.8);
    margin-top: rem-calc(10);

    .awwards {
      margin: rem-calc(10 2 0 2);
    }
    color: $white;
  }

  @media screen and (max-width: 700px){
    .awwards-list {
      transform: scale(0.7);
      .awwards {
        margin: 0;
      }
    }
  }
}
